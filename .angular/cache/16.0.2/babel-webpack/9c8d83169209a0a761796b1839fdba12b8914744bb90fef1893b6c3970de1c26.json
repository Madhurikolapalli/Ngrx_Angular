{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { decrement, increment, init, set } from './counter.action';\nimport { of, switchMap, tap, withLatestFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nclass CounterEffects {\n  constructor(actions$, store) {\n    this.actions$ = actions$;\n    this.store = store;\n    this.loadCount = createEffect(() => this.actions$.pipe(ofType(init), switchMap(() => {\n      const storedValue = localStorage.getItem('counter');\n      if (storedValue) {\n        return of(set({\n          value: +storedValue\n        }));\n      }\n      return of(set({\n        value: 0\n      }));\n    })));\n    this.savecount = createEffect(() => this.actions$.pipe(ofType(increment, decrement), withLatestFrom(this.store.select('counter')), tap(([action, storedata]) => {\n      console.log(action);\n      localStorage.setItem('counter', action.value.toString());\n      localStorage.setItem('storeValue', storedata.toString());\n    })\n    // ofType(increment),\n    // tap((action: any) => {\n    //   console.log(action);\n    //   localStorage.setItem('counter', action.value.toString());\n    // })\n    ), {\n      dispatch: false\n    });\n  }\n}\nCounterEffects.ɵfac = function CounterEffects_Factory(t) {\n  return new (t || CounterEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store));\n};\nCounterEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CounterEffects,\n  factory: CounterEffects.ɵfac\n});\nexport { CounterEffects };","map":{"version":3,"names":["createEffect","ofType","decrement","increment","init","set","of","switchMap","tap","withLatestFrom","CounterEffects","constructor","actions$","store","loadCount","pipe","storedValue","localStorage","getItem","value","savecount","select","action","storedata","console","log","setItem","toString","dispatch","i0","ɵɵinject","i1","Actions","i2","Store","factory","ɵfac"],"sources":["C:\\Users\\Madhuri\\Angular\\Ngrx\\Ngrx\\src\\app\\Store\\counter.effects.ts"],"sourcesContent":["import { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { decrement, increment, init, set } from './counter.action';\r\nimport { count, of, switchMap, tap, withLatestFrom } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CounterEffects {\r\n  loadCount = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(init),\r\n      switchMap(() => {\r\n        const storedValue = localStorage.getItem('counter');\r\n        if (storedValue) {\r\n          return of(set({ value: +storedValue }));\r\n        }\r\n        return of(set({ value: 0 }));\r\n      })\r\n    )\r\n  );\r\n  savecount = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(increment, decrement),\r\n        withLatestFrom(this.store.select('counter')),\r\n        tap(([action, storedata]) => {\r\n          console.log(action);\r\n          localStorage.setItem('counter', action.value.toString());\r\n          localStorage.setItem('storeValue', storedata.toString());\r\n        })\r\n        // ofType(increment),\r\n        // tap((action: any) => {\r\n        //   console.log(action);\r\n        //   localStorage.setItem('counter', action.value.toString());\r\n        // })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store: Store<{ counter: number }>\r\n  ) {}\r\n}\r\n"],"mappings":"AAAA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,SAAS,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,QAAQ,kBAAkB;AAClE,SAAgBC,EAAE,EAAEC,SAAS,EAAEC,GAAG,EAAEC,cAAc,QAAQ,MAAM;;;;AAIhE,MACaC,cAAc;EA+BzBC,YACUC,QAAiB,EACjBC,KAAiC;IADjC,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,KAAK,GAALA,KAAK;IAhCf,KAAAC,SAAS,GAAGd,YAAY,CAAC,MACvB,IAAI,CAACY,QAAQ,CAACG,IAAI,CAChBd,MAAM,CAACG,IAAI,CAAC,EACZG,SAAS,CAAC,MAAK;MACb,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MACnD,IAAIF,WAAW,EAAE;QACf,OAAOV,EAAE,CAACD,GAAG,CAAC;UAAEc,KAAK,EAAE,CAACH;QAAW,CAAE,CAAC,CAAC;;MAEzC,OAAOV,EAAE,CAACD,GAAG,CAAC;QAAEc,KAAK,EAAE;MAAC,CAAE,CAAC,CAAC;IAC9B,CAAC,CAAC,CACH,CACF;IACD,KAAAC,SAAS,GAAGpB,YAAY,CACtB,MACE,IAAI,CAACY,QAAQ,CAACG,IAAI,CAChBd,MAAM,CAACE,SAAS,EAAED,SAAS,CAAC,EAC5BO,cAAc,CAAC,IAAI,CAACI,KAAK,CAACQ,MAAM,CAAC,SAAS,CAAC,CAAC,EAC5Cb,GAAG,CAAC,CAAC,CAACc,MAAM,EAAEC,SAAS,CAAC,KAAI;MAC1BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnBL,YAAY,CAACS,OAAO,CAAC,SAAS,EAAEJ,MAAM,CAACH,KAAK,CAACQ,QAAQ,EAAE,CAAC;MACxDV,YAAY,CAACS,OAAO,CAAC,YAAY,EAAEH,SAAS,CAACI,QAAQ,EAAE,CAAC;IAC1D,CAAC;IACD;IACA;IACA;IACA;IACA;IAAA,CACD,EACH;MAAEC,QAAQ,EAAE;IAAK,CAAE,CACpB;EAIE;;AAlCQlB,cAAc,C;mBAAdA,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,KAAA;AAAA;AAAdxB,cAAc,C;SAAdA,cAAc;EAAAyB,OAAA,EAAdzB,cAAc,CAAA0B;AAAA;SAAd1B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}